# ex_christmas.py
# author: C.F.Kwok
# date: 2017-12-12
from array import array
from simp_py import tft
DUTY_ON=5
DUTY_OFF=0
PIEZO_PIN=25
#note
C=2441
D=2741
E=3048
F=3225
G=3654
A=4058
B=4562
C2=4882
SONG=array('H',  [E,E,E,E,E,E,E,G,C,D,E,F,F,F,F,F,E,E,E,E,D,D,E,D,G])
NOTE_LEN=bytearray([1,1,2,1,1,2,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,2,2])
import framebuf
mc_width= 128
mc_height= 63
mc_bits = bytearray([
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0xe0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xe0, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x1c, 0xc0, 0xf0, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x0e, 0xc0, 0x98, 0x81, 0x0f, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x8c, 0xc1,
   0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
   0x03, 0xe0, 0x86, 0x61, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x80, 0x01, 0xe0, 0x83, 0x31, 0x0e, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0xe0, 0xc1, 0x19,
   0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
   0xc0, 0xe0, 0xc1, 0x0c, 0x07, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0xe0, 0x80, 0xf1, 0xc0, 0x04, 0x03, 0x0c, 0x06, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x73, 0xc0, 0x86,
   0x03, 0x0c, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x60,
   0x00, 0x73, 0xe0, 0x83, 0xe1, 0x0c, 0x07, 0x63, 0x00, 0x02, 0x00, 0x00,
   0x00, 0x00, 0x30, 0x60, 0x00, 0x3b, 0xe0, 0xc1, 0xb9, 0x3e, 0x9f, 0x73,
   0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xe0, 0x80, 0x39, 0xe0, 0xc0,
   0xbc, 0xba, 0xdf, 0x7b, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc0,
   0xc0, 0x18, 0xf0, 0xc0, 0x5c, 0xbb, 0xdc, 0x39, 0x80, 0x1f, 0x00, 0x00,
   0x00, 0x00, 0xfe, 0xc0, 0xc1, 0x1c, 0x70, 0xe0, 0x2e, 0x99, 0xcc, 0x38,
   0xc0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x78, 0x80, 0x33, 0x0c, 0x78, 0x60,
   0x8e, 0xdd, 0xee, 0x1c, 0x01, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
   0x0e, 0x0e, 0x38, 0x60, 0x86, 0x4c, 0xf6, 0x9e, 0x01, 0x06, 0x00, 0x00,
   0x00, 0x00, 0x10, 0x00, 0x00, 0x06, 0x1c, 0x70, 0xc6, 0x6c, 0x76, 0xde,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1c, 0x70,
   0x7e, 0x3c, 0xfe, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x07, 0x0c, 0x60, 0x3c, 0x18, 0xc6, 0x3e, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x0c, 0x60, 0x00, 0x00, 0x00, 0x1f,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xc0,
   0x00, 0x00, 0xf0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x03,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xc3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00,
   0x00, 0xbc, 0x78, 0x3c, 0xfc, 0x00, 0x0f, 0x5f, 0xfe, 0x8f, 0x03, 0x70,
   0x00, 0x00, 0x7e, 0x00, 0x00, 0xc6, 0x79, 0x38, 0xfc, 0x07, 0x87, 0x73,
   0xee, 0x9f, 0x03, 0x78, 0xc0, 0x80, 0xe3, 0x00, 0x00, 0xc3, 0x71, 0x38,
   0x1c, 0x0f, 0xc7, 0x61, 0xe6, 0x9c, 0x07, 0x78, 0xc0, 0x80, 0xc1, 0x00,
   0x80, 0x83, 0x71, 0x38, 0x1c, 0x0e, 0xc7, 0x40, 0xe6, 0x98, 0x07, 0x38,
   0xc0, 0xc1, 0xc1, 0x00, 0x80, 0x01, 0x70, 0x38, 0x1c, 0x0e, 0xc7, 0x40,
   0xe0, 0x80, 0x07, 0x3c, 0xe0, 0xc1, 0x81, 0x00, 0xc0, 0x01, 0x70, 0x38,
   0x1c, 0x0e, 0xc7, 0x01, 0xe0, 0x80, 0x0f, 0x3c, 0xe0, 0xc1, 0x01, 0x00,
   0xc0, 0x01, 0x70, 0x38, 0x1c, 0x0e, 0xc7, 0x03, 0xe0, 0x80, 0x0e, 0x3c,
   0xe0, 0x83, 0x03, 0x00, 0xc0, 0x01, 0x70, 0x38, 0x1c, 0x0f, 0x87, 0x07,
   0xe0, 0x80, 0x1e, 0x7e, 0xb0, 0x83, 0x0f, 0x00, 0xc0, 0x01, 0x70, 0x3f,
   0xdc, 0x03, 0x07, 0x1f, 0xe0, 0x80, 0x1c, 0x7a, 0x90, 0x03, 0x1f, 0x00,
   0xc0, 0x01, 0x70, 0x3c, 0xfc, 0x03, 0x07, 0x3e, 0xe0, 0x80, 0x1c, 0x7a,
   0x90, 0x03, 0x7e, 0x00, 0xc0, 0x01, 0x70, 0x38, 0x3c, 0x07, 0x07, 0x7c,
   0xe0, 0x80, 0x38, 0x3b, 0x18, 0x07, 0xf8, 0x00, 0xc0, 0x01, 0x70, 0x38,
   0x1c, 0x0f, 0x07, 0xf0, 0xe0, 0x80, 0x38, 0x39, 0x08, 0x07, 0xf0, 0x00,
   0xc0, 0x01, 0x70, 0x38, 0x1c, 0x0e, 0x07, 0xe0, 0xe0, 0x80, 0x78, 0x39,
   0xf8, 0x07, 0xc0, 0x01, 0xc0, 0x01, 0x70, 0x38, 0x1c, 0x0e, 0x07, 0xc0,
   0xe0, 0x80, 0xf0, 0x78, 0x08, 0x0f, 0xc0, 0x01, 0x80, 0x01, 0x71, 0x38,
   0x1c, 0x0e, 0x47, 0xc0, 0xe0, 0x80, 0xf0, 0x38, 0x0c, 0x4e, 0xc0, 0x01,
   0x80, 0x03, 0x71, 0x38, 0x1c, 0x0e, 0x47, 0xc0, 0xe0, 0x80, 0xf0, 0x78,
   0x04, 0xce, 0xc0, 0x00, 0x00, 0x83, 0x70, 0x3c, 0x1c, 0x0e, 0xc7, 0xe0,
   0xe0, 0x80, 0xe0, 0x78, 0x04, 0xde, 0xc0, 0x00, 0x00, 0x4e, 0x78, 0x3e,
   0x3c, 0x1e, 0xc7, 0x71, 0xe0, 0xc1, 0x61, 0x78, 0x0e, 0xde, 0x61, 0x00,
   0x00, 0x38, 0x00, 0x00, 0x1c, 0x1c, 0x47, 0x1e, 0xe0, 0x80, 0x01, 0x38,
   0x04, 0x40, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])
BITM={0: 1, 1: 2, 2:4, 3:8, 4:0x10,5:0x20,6:0x40,7:0x80}
import time
class Christmas:
    global PIEZO_PIN, DUTY_OFF,BITM,tft,framebuf,mc_width,mc_height,mc_bits,time
    def __init__(self):
        from machine import PWM,Pin
        self.mute=False
        self.usr_btn=Pin(39, Pin.IN)
        piezo_pin=Pin(PIEZO_PIN,Pin.OUT)
        self.pwm_pin = PWM(piezo_pin)
        self.pwm_pin.duty(DUTY_OFF)        
        self.fbuf = framebuf.FrameBuffer(bytearray(128 * 63 *2),128,63,framebuf.RGB565)
        self.fbuf.fill(0)
        tft.tft.clear()
        self.note_idx=0
        self.note_stt=0
        
    def play_melody(self):
        global DUTY_ON, DUTY_OFF, SONG,NOTE_LEN
        if self.usr_btn.value()==0:
            self.mute=True
            self.pwm_pin.duty(DUTY_OFF)        
        if self.note_stt==0:
            self.pwm_pin.freq(SONG[self.note_idx])
            if not self.mute:
                self.pwm_pin.duty(DUTY_ON)
            self.note_tmo=time.ticks_ms() + 400 * NOTE_LEN[self.note_idx]
            self.note_stt=1
        elif self.note_stt==1:
            tick_ms = time.ticks_ms()
            if tick_ms < self.note_tmo:
                return
            self.pwm_pin.duty(DUTY_OFF)
            self.note_tmo = tick_ms + 50
            self.note_stt=2
        elif self.note_stt==2:
            tick_ms = time.ticks_ms()
            if tick_ms < self.note_tmo:
                return
            self.note_stt=0
            self.note_idx+=1
            if self.note_idx>= len(SONG):
                self.note_idx=0
                self.note_stt=3

    def show(self):
        if self.usr_btn.value()==0:
            self.mute=True
            self.pwm_pin.duty(DUTY_OFF)
            
        for ix in range(mc_width):
            for iy in range(mc_height):
                ic = self.fbuf.pixel(ix,iy)
                if ic is None:
                    ic=0
                tft.tft.pixel(ix*2, iy*2,ic)
                self.play_melody()
                
    def run(self):
        import gc
        color=0xffff        
        x=0
        y=0
        for bx in mc_bits:
            for j in range(8):
                b = bx & BITM[j]
                self.play_melody()
                if b:
                    self.fbuf.pixel(x,y,color)
                x+=1
            if x>= mc_width: 
                x=0
                y+=1
        self.show()
                
        time.sleep(1)
        for i in range(13):
            time.sleep(0.1)
            self.fbuf.scroll(-7,0)
            self.show()
        gc.collect()

if __name__=='__main__':
    test=Christmas()
    test.run()

